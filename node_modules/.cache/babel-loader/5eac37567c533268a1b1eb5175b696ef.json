{"ast":null,"code":"import { CHANGE_SEARCHFIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from './constants';\nexport var setSearchField = function setSearchField(text) {\n  //console.log(text);\n  return {\n    type: CHANGE_SEARCHFIELD,\n    payload: text\n  };\n};\nexport var requestRobots = function requestRobots() {\n  return function (_ref) {\n    var dispatch = _ref.dispatch;\n    dispatch({\n      type: REQUEST_ROBOTS_PENDING\n    });\n    fetch('https://jsonplaceholder.typicode.com/users').then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return dispatch({\n        type: REQUEST_ROBOTS_SUCCESS,\n        payload: data\n      });\n    }).then(function (error) {\n      return dispatch({\n        type: REQUEST_ROBOTS_FAILED,\n        payload: error\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Work\\robofriends-with redux\\src\\actions.js"],"names":["CHANGE_SEARCHFIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","setSearchField","text","type","payload","requestRobots","dispatch","fetch","then","response","json","data","error"],"mappings":"AAAA,SACIA,kBADJ,EAEIC,sBAFJ,EAGIC,sBAHJ,EAIIC,qBAJJ,QAKO,aALP;AAOA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AACpC;AACA,SAAO;AACHC,IAAAA,IAAI,EAAEN,kBADH;AAEHO,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CANM;AAQP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,gBAAgB;AAAA,QAAdC,QAAc,QAAdA,QAAc;AAC/CA,IAAAA,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAEL;AAAP,KAAD,CAAR;AACAS,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACSC,IADT,CACc,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADtB,EAESF,IAFT,CAEc,UAAAG,IAAI;AAAA,aAAIL,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAEJ,sBAAR;AAAgCK,QAAAA,OAAO,EAAEO;AAAzC,OAAD,CAAZ;AAAA,KAFlB,EAGSH,IAHT,CAGc,UAAAI,KAAK;AAAA,aAAIN,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAEH,qBAAR;AAA+BI,QAAAA,OAAO,EAAEQ;AAAxC,OAAD,CAAZ;AAAA,KAHnB;AAIH,GAN4B;AAAA,CAAtB","sourcesContent":["import { \r\n    CHANGE_SEARCHFIELD,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED\r\n} from './constants';\r\n\r\nexport const setSearchField = (text) => {\r\n    //console.log(text);\r\n    return {\r\n        type: CHANGE_SEARCHFIELD,\r\n        payload: text\r\n    }\r\n}\r\n\r\nexport const requestRobots = () => ({dispatch}) => {\r\n    dispatch({type: REQUEST_ROBOTS_PENDING});\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data} ))\r\n            .then(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error} ))\r\n}"]},"metadata":{},"sourceType":"module"}