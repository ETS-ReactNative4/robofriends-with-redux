{"ast":null,"code":"import _classCallCheck from \"C:\\\\Work\\\\robofriends\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Work\\\\robofriends\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Work\\\\robofriends\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Work\\\\robofriends\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Work\\\\robofriends\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Work\\\\robofriends\\\\src\\\\components\\\\ErrorBoundary.js\";\nimport React, { Component } from 'react';\n\nvar Errorboundary =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Errorboundary, _Component);\n\n  function Errorboundary(props) {\n    var _this;\n\n    _classCallCheck(this, Errorboundary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Errorboundary).call(this, props));\n    _this.state = {\n      hasError: false\n    };\n    return _this;\n  } // static getDerivedStateFromError(error) {\n  //     return { hasError: true};\n  // }\n\n\n  _createClass(Errorboundary, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, info) {\n      //  this.setState.hasError = true;\n      this.setState({\n        hasError: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.hasError) {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"Ooops. That is not gooood at all.\");\n      }\n\n      return this.props.children;\n      /*return (\r\n          this.state.hasError ? \r\n              <h1>Ooops. That is not gooood at all.</h1> \r\n              : this.props.children\r\n      )*/\n    }\n  }]);\n\n  return Errorboundary;\n}(Component);\n\nexport default Errorboundary;","map":{"version":3,"sources":["C:\\Work\\robofriends\\src\\components\\ErrorBoundary.js"],"names":["React","Component","Errorboundary","props","state","hasError","error","info","setState","children"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,a;;;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,uFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAFe;AAMlB,G,CAED;AACA;AACA;;;;;sCAEmBC,K,EAAOC,I,EAAO;AAC/B;AACA,WAAKC,QAAL,CAAc;AACVH,QAAAA,QAAQ,EAAE;AADA,OAAd;AAGD;;;6BAEQ;AACL,UAAI,KAAKD,KAAL,CAAWC,QAAf,EAAyB;AACpB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAP;AACH;;AACD,aAAO,KAAKF,KAAL,CAAWM,QAAlB;AACD;;;;;AAKH;;;;EA9BuBR,S;;AAgC5B,eAAeC,aAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Errorboundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false,\r\n\r\n        }\r\n    }\r\n\r\n    // static getDerivedStateFromError(error) {\r\n    //     return { hasError: true};\r\n    // }\r\n\r\n    componentDidCatch( error, info ) {\r\n      //  this.setState.hasError = true;\r\n      this.setState({\r\n          hasError: true\r\n      });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n             return <h1>Ooops. That is not gooood at all.</h1>\r\n         }\r\n         return this.props.children\r\n        /*return (\r\n            this.state.hasError ? \r\n                <h1>Ooops. That is not gooood at all.</h1> \r\n                : this.props.children\r\n        )*/\r\n    }\r\n}\r\nexport default Errorboundary;"]},"metadata":{},"sourceType":"module"}